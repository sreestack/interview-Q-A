1.Why do we need container orchestration?
	if we want excution our application with out depend on OS and prefre to provide best output we need to chosse container orchestration. Because this will take traffic and desire conatiner and current container count everything
2. What is container Runtime
	A container runtime, also known as container engine, is a software component that can run containers on a host operating system.
3. What are different container orchestration tools
	K8s, docker swarm
4. Why Kubernetes and not Docker swarm or something else.
	Docker swarm is basic version of kubernetes like its not scale up instance  like that check full details in note
5. what means by pod ?
	Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. Pods host containers 
6. What is Kubernetes Architecture?
	the Kubernetes control plane and the nodes in the cluster. The control plane machine components include the Kubernetes API server, Kubernetes scheduler, 
	Kubernetes controller manager, and etcd. Kubernetes node components include a container runtime engine or docker, a Kubelet service, and 
	a Kubernetes proxy service.
	
	etcd:
		It stores the configuration information which can be used by each of the nodes in the cluster. 
	API Server: 
		API server implements an interface, which means different tools and libraries can readily communicate with it. 
		Kubeconfig is a package along with the server side tools that can be used for communication.
	Controller Manager:
		It works toward getting the shared state of cluster and then make changes to bring the current status of the server to the desired state. 
		The key controllers are replication controller, endpoint controller, namespace controller, and service account controller.
	Scheduler:
		It is responsible for tracking utilization of working load on cluster nodes and then placing the workload on which resources are available 
		and accept the workload. In other words, this is the mechanism responsible for allocating pods to available nodes. 
		The scheduler is responsible for workload utilization and allocating pod to new node.
	Kubelet Service:
		communication between master and child server happen with this.
		It interacts with etcd store to read configuration details and wright values. 
		This communicates with the master component to receive commands and work. 
		The kubelet process then assumes responsibility for maintaining the state of work and the node server. 
		It manages network rules, port forwarding, etc.
	Kubernetes Proxy Service
		This is a proxy service which runs on each node and helps in making services available to the external host. 
		It helps in forwarding the request to correct containers and is capable of performing primitive load balancing. 
		It makes sure that the networking environment is predictable and accessible and at the same time it is isolated as well. 
		It manages pods on node, volumes, secrets, creating new containers’ health checkup, etc
	Container run time(child server used for pod to pod communication in project we use vnet as network communication) & 
	cloud container manager(controlplane ) are two  more .
7. Designing High Availability for Master nodes !
	we have 3 master and 1 servers act as leader. We use Quorum concept to select the leader .its always odd numbers
8. What type of HA (high availability) architecture havae you managed in terms of 	high availability or otherwise.

	interanlly testing we use kubeadm process like one master and 6 worker node concept . 
	Production envionment use EKS. But envionment i cant disclose . they are planty of servers/application  running
9. What is the Kubernetes Version you are running
	1.24
10. How do you get configuration information for different clusters for different envionments ?
	every cluster has kubeconfig file . we will use kubectl use to connect the cluster and i ahve give kubeconfig loaction which i save ineternally .
	Default loaction : $HOME/.kube/config.
	kuybeconfig comonly have cluster,user and cert info, context (mappling cluster to user)
11. When you issue a kubectl command, what happens behind the scenes. Can you please run us through
	command : kubectl run podname
	a. its convert to API call then API-server will chcek the syntax correct or not
	b. then convert REST-API call for CRUD (craete/read/update/delete) operations  it will chcek ipadrees and port(6443) then authutication/autazoation  request .
	Those auth details store kubeconfig file. After that Those information will store in etcd. then schdeule will chcek and schdeule to workernode.
	controler will chcek is ther mul no or single . this will work with kubelet and container runtime and create the pod
12. What are the different types of Objects in k8s. How to get the list of objects installed in the cluster?
	pod, Namespecs, Replicaset, service, configmaps, volumes.deploymenst,DaemonSets,staticpods,StatefulSets,secrets,clusterrole,cluterrolebinding
command : kubectl api-resources
13. Do we have some means of getting documentation of the resources in offline mode
	kubectl explain objectname(pod)
14. Designing an application having two sets of services: Front end Service, Backend Service and DB Service. Share best practices and architecture
	a. create deployment object for frontend use of loadbalnce/nodeport and ingress  ( beacuse if any pod destroy another pod create for any name like deployment -xcvt)
	b. careate stateful set of DB 3 . ( sateful is maintain same name if its db fail and restart also another thing internally its act one as master and remain two as child . If we want decrease db3 to db1 servers first it will down last server )	
	c. write using for clusterip ( you can read any db )
	d. write using of Headless ( you can use master server)
	e. will main egress service enter DB to cut outside access
	
15. Discuss aboout Stateful set and deployments in k8s

	The key difference between stateful and stateless applications is that stateless applications don’t “store” data. On the other hand, stateful applications 
	require backing storage. For example, applications like the Cassandra, MongoDB, and MySQL databases require some type of persistent storage to survive service 
	restarts.
16 . Share object used for scaling up the pods, say, in case of load increase?
	while using HPA(horizontal pod autoscaler)we can set case like if load touched 75% new instance will launch.Like that you can increase instance depend on load
17.Discuss about Restart Policies as part of yaml files.
		
	kubenets reseat policy of pod/containers are three type 
	1. never 2. Always 3. onfailure 
	1. never : what ever situcation its not restart container
	2. Always: suppose container have some issue like its not coming uup that time we will use .
	3. Onfailure : its will happen only failuyre times
	diff between always and onfailure . Suppoese we use jobs in k8s. After job complete also exit code is 0 that time its will restart while using always
18. Discuss different status of Pods. Like Pending status
	Pending:
	its not schdeule . Schdeule unable to find process resource 
	taint and tollarence defind 
	Running:	The Pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting.
	Succeeded:	All containers in the Pod have terminated in success, and will not be restarted.
	Failed:	All containers in the Pod have terminated, and at least one container has terminated in failure. That is, the container either exited with non-zero status or was terminated by the system.
	Unknown:	For some reason the state of the Pod could not be obtained. This phase typically occurs due to an error in communicating with the node 
	where the Pod should be running.
19.	How to resolve specific issues related to Pod status like OOM(outofmemory). Debugging approach based on the pod status?
	example : while schdeule pod you menstion min usage like 1 cpu and 1gb memorey and max 2 cpu and 5 gb. Suppose pod requested more than that then OOM error 
	will occurs
20.What is the concept of Image pullback / something similar ?
	suppose if you want pull the image like docker hub we dont need any specific permission but pushing we need to login and push . 
	this mage pullback will come while kubelet unable to pull the image for private repositiry may credential issues. 
	how to reslove:we have concept called secret to slove credential 
21. Can a Pod have multiple containers?
	yes we can . but best pratice maintain single container in one pod.
22. Scenario: Very huge file, present in s3. User wish to download the file. Application Image can not handle it directly. 
    	     It has to be downloaded and made available to the Pod. like before run pods that pod need some info  ....Concept of Init containers here

	initcontainer: we use use multi init container and write our requirements .if this case we can use emptyDIR for both pod and init volume and use it . 
	So once its downloaded pod will use it.if it failed its start from starting init container excution.
23. Scenario: Central logging system. Want to use that system. Discuss the pattern used. .....Concept of sidecar Pattern
	sidecar container: it will excution after regular pod completed and collect the logs and store to central log repositiry.
	
24. Discussion on best practice of having smallest possible Image size...
	 Discussion on Ephemeral containes. Concept here
	
	To trobleshoot the issue and maintain the container size minimum that time we can use. Pod can create and another pod and connect use of same network then 
	trobleshoot.
	
	Ephemeral containers allow you to create a container image that includes all the debugging tools you might need. 
	Once there is a need for debugging, you would deploy the ephemeral container into the running pod of your choice.
	
	https://loft.sh/blog/using-kubernetes-ephemeral-containers-for-troubleshooting/
25. Scenario: Your application need to talk to some legacy application. Need to reduce the Image size.. Pattern to be used here to be discussed such as Ambassador pattern


	If you want connect legency application we need conncetivity/proxy so it should be enebale for that time we can use Ambassador pattern/proxy pattern.
	
	An Ambassador container is a sidecar container that is in charge of proxying connections from the application container to other services. However, 
	while the Adapter container acts as a reverse proxy, the Ambassador container acts as a client proxy.
	
	What is advantage of istion is its automatically enable proxy once its enable .
	its useful to trace how many request happen pod1 to pod2 , Howmany success and how many failed .
	
	Finally :
	
	we will ambassador container , application container connect ambassador and its connect to lagency and dataflow come to application .
	
	istion container :
	Istiod acts as the control plane, distributing the configuration to all sidecar proxies and gateways. It enables intelligent application-aware load balancing
	from the application layer to other mesh enabled services in the cluster and bypasses the rudimentary kube-proxy load balancing. 
	
26. Scenario: App B to communicate with App A using some endppoint. API A would give Json output, App B needs xml format. How to resolve this stalemate. 
Concept of Adapter / exporters container discussed !

	in adapter container useful to take something input and will give different format output like excel,pdf,..etc.
27. What is the use of Replicaset / deployment ?
	
	Replicaset: its maintain number of desire count
	Deployment : its will do rolling update what kind number and app we require
	These are loops means desire to current status changes depend on traffic and what we updated.
28. How to rollback to previous versions?

	while doing deployment create record means --record for every deployment so when ever you want go back specific version you can able to do it .
	
	kubectl rollout history deployment/app
	kubectl rollout undo deployment/app --to-revision=2
	
	https://learnk8s.io/kubernetes-rollbacks
29.Different deployment strategies in k8s. Pros and Cons for each of them

	Rolling deployment:
						replaces pods running the old version of the application with the new version, one by one, without downtime to the cluster.
	Recreate:	
				Terminates all the pods and replaces them with the new version.
				Ramped slow rollout:rolls out replicas of the new version, while in parallel, shutting down old replicas. 
	blue/green: 
				release a new version alongside the old version then switch traffic.
	Canary deployment:
				uses a progressive delivery approach, with one version of the application serving most users, and another, newer version serving 
				a small pool of test users. The test deployment is rolled out to more users if it is successful.
	a/b testing: 
				release a new version to a subset of users in a precise way (HTTP headers, cookie, weight, etc.). 
				A/B testing is really a technique for making business decisions based on statistics but we will briefly describe the process. 
				This doesn’t come out of the box with Kubernetes, i
				t implies extra work to setup a more advanced infrastructure (Istio, Linkerd, Traefik, custom nginx/haproxy, etc).
				
		https://github.com/ContainerSolutions/k8s-deployment-strategies
30. why we need labels and what is importent of labels ?
	we have many kubernets objects so gather and maintain perticualr application objects is versy difficult . So we labels the objects 
31. Scenario: created deployment for application and also service . While send request its not responding . what is reason  and how you troubleshoot ?

	chcek service matched to pods means selector properly menstion or not then chcek end points .
32. How to chcek the labels of pod ?
	kubectl get podname --show-labels
33. If you not assign label while creating pod . what kubernets will do ?
	kubernets will assign deployment label like run : <metadata.name>
	ex: kubectl run nginnx --image=nginx:latest
	default label is run: nginx
34. how to add label on running pod
	kubectl label podname label(env=dev)
35. How to override existing label 
	kubectl label pod podname label --overwrite
36. how to remove perticular label ?
	kubectl label pod -l label-
37. What Are Annotations in Kubernetes?
	Annotations are used for “non-identifying information” i.e., metadata that Kubernetes does not care about. we cant filter using of annotation .
	its used to for external tools like prometheus
38. what is use of selectors ?
	we can use selector to fill the objects . We have two type of selectore a. equality ( used by services) we can use = or != b ex: app=ngnix. 
	set based selector( used by deployment,replicaset) we can use or and,other kind operator ex: env in (qa,uat)
	Select all pods which ag
39. tell me current exp in kubernets
		I have worked multiple projects , manily application running on on-prem , we have prepared require objects and deploy in kubernets using of helm and
		work on some poc like montoring setup like that .
		
39. What are monitoing which you are used in kubernetes platform ?
	we are used elk and big panda, kubernets dash board . elk we need chcek pod logs when its up and what kind of actvites happing . 
	Even pod teminate will get complete logs .
40. Difference between deployment,replicaset and stateful set ?
	ReplicaSet: Using ReplicaSets not only caters to the easy scaling and rescheduling of an application, 
			but also allows you to perform rolling or multi-track updates to an application	
	Deployment : you can use a Deployment to manage pods and ReplicaSets.Deployments are useful when you need to roll out changes to ReplicaSets. 
			By using a Deployment to manage a ReplicaSet, you can easily rollback to an earlier Deployment revision
	Statefulset: when you create pods they are always created in the same order and allocated identifiers that are applied to host names and 
			the internal cluster DNS. Those identifiers ensure there are stable and predictable network identities for pods in the environment. 
			If its destory and create it will create rename and deployment come differnt name.
			ex: 	A Redis pod that has access to a volume, but you want it to maintain access to the same volume even if it is redeployed or restarted
				A Cassandra cluster and have each node maintain access to its data
				A webapp that needs to communicate with its replicas using known predefined network identifiers
			StatefulSets are available in Kubernetes 1.9 and later.
41. If pod is delete in stateful set IP addreess still retained ?
	No, it will reacrete StatefulSet Pods have a unique identity that is comprised of an ordinal, a stable network identity, and stable storage.
	
40.	Pod is not coming up in perticualr node ?
	many reason a) taint and tolarence , b) memorey issue ( you system ahve 2 gb but you requested 4gb its pending state ) 
	c) if you reuse the host port 	d) image not avaliable 
41. How can i do autoscaling of deployment or pods in kubernetes cluster?
	a) hpa ( horizontal pod autoscaling) --> if you are using kubeadm then you need setup metic server, when ever use hpa its will communicate metic server and 
		metic commuinacte kubeadm server and get the data.if it reaches 50 % cpu then increase pod count 
	b) vpa ( vertical pod autoscaling): if pod using 500 mb if application goes where increase the memory when application increase
42. If container not coming up how can you troubleshhot ?
	a. kubectl describe pod name chcek first logs 
	b. kubectl container log containername 
	c. kubectl exec -it podname /bin/bash ( go inside of conatiner and check the logs)
	d. if you configured elk ( external montoring tool) then you can chcek it
43. kubectl cluster logs ?
	its stored in home/kubecluster folder then you can chcek it
	
44. different componenets of kubernetes ?
	kubernets architecture
45. diference b/w helm and operate framwork ?

46. difference between local and remote storage in kubernetes cluster ?
	stateful application use remote storage and different stroage like aws ebs, google clod .
	If you are maintain remote storage like google cloud if pod goes down also you can maintain the data.
	If you not main like pv & the pod goes fdown then lost the data.local lioks hostpath and empty dir like that.
47. difference between stand alone kubernets and gks /eks ?
	gks/eks : you no need think on maintaince of kubeadmin server, infra level they will take ,
	standalone. you must maintain all servers up to patch and master servers also.
	and version upgrade also.
48. How will you maintain multiple envionment value.yaml file ?

49. how you can always up your application ?
	more replicasa, hpa,vpa,liveness and readness 
	
50.	What you did in past in kubernetes area?
	we taken migration project and written objects like deployment,service and network policy and taken action accordingily . 
51. What type of setup you worked on like Kubeadm or GKE or EKS?
	kubeadm and eks 
52. Can you please explain architecture of K8s? what is version that you used?

53. Single pod multi-container, single pod multi container which way you choose and where you used this method?
	muliti-conatiner 
	init container - certifiacte
	conatiner -application
	sidecar container - logs for splunk
54. What is difference between deployment and stateful state?
	staefulset : 
		maintain dns same if reset of pod .
		headless service : Sometimes you don't need load-balancing and a single Service IP. In this case, you can create what are termed "headless" Services, 
		by explicitly specifying "None" for the cluster IP.
		
		you can achice headless ervice using deployment also but you need to write any codee .
55. What are all objects you used in K8s?

56. What is use of service accounts?
	henever you access your Kubernetes cluster with kubectl, you are authenticated by Kubernetes with your user account. 
	User accounts are meant to be used by humans. But when a pod running in the cluster wants to access the Kubernetes API server, 
	it needs to use a service account instead.
	ex: when you have a CI/CD pipeline agent deploying your applications to the same cluster.
57. Once you deployed application using deployment into cluster, how do you access application outside world?
	manyways are there like 
	a. create service like node port
	b. ingress process
58. What is use of clusterIP service?
	When you create a Service of type ClusterIP , Kubernetes creates a stable IP address that is accessible from nodes in the cluster.
	Clients in the cluster call the Service by using the cluster IP address and the TCP port specified in the port field of the Service manifest.
	
		 a type of service which is only accessible within a Kubernetes cluster, or the internal ("virtual") IP of components within a Kubernetes cluster.
59. How did you copy a config file inside pod?
	we need to use kubectl command-line utility with the cp option for copy files and folders to and from pods and localhost.
	ex: kubectl cp <file-spec-src> <file-spec-dest>
	
60. What is difference between secrets and configmap?
	Both, ConfigMaps and Secrets store data as a key value pair. The major difference is, Secrets store data in base64 format meanwhile 
	ConfigMaps store data in a plain text.

	If you have some critical data like, keys, passwords, service accounts credentials, db connection string, etc then you should always go for Secrets 
	rather than Configs.

	And if you want to do some application configuration using environment variables which you don't want to keep secret/hidden like, app theme, 
	base platform url, etc then you can go for ConfigMaps
61. Explain static pods in K8s?
	Static Pods are managed directly by the kubelet daemon on a specific node, without the API server observing them. 
	Unlike Pods that are managed by the control plane (for example, a Deployment); instead, the kubelet watches each static Pod (and restarts it if it fails)
	
	You almost never have to deal with static pods. Static pods are usually used by software bootstrapping kubernetes itself. 
	For example, kubeadm uses static pods to bringup kubernetes control plane components like api-server, controller-manager as static pods. 
	kubelet can watch a directory on the host file system
62. Why deamon sets required for K8s?
	DaemonSets can improve the performance of a Kubernetes cluster by distributing maintenance tasks and support services via deploying Pods across all nodes.
	They are well suited for long-running services like monitoring or log collection. Following are some example use cases of DaemonSets:

		To run a daemon for cluster storage on each node, such as glusterd and ceph.
		To run a daemon for logs collection on each node, such as Fluentd and logstash.
		To run a daemon for node monitoring on every note, such as Prometheus Node Exporter, collectd, or Datadog agent.
63. Do you know high availability in pod level?
	a. readness and liveness probs setup properly
	b. taint and tolenece
	c. replicaset 
64. Is it possible to deply pod in master?
	yes(use of taint and toleance) . its possble . but best pratice we cant encourge to deploy.
65. Is it possible to decide to deploy pod in particular node?
	a. Node selector :
			nodeSelector is the simplest recommended form of node selection constraint. You can add the nodeSelector field to your Pod specification 
			and specify the node labels you want the target node to have. Kubernetes only schedules the Pod onto nodes that have each of the labels 
			you specify
	b. Node affinity: 
			Node affinity is conceptually similar to nodeSelector, allowing you to constrain which nodes your Pod can be scheduled on based on node labels. There are two types of node affinity:

				requiredDuringSchedulingIgnoredDuringExecution: The scheduler can't schedule the Pod unless the rule is met. This functions like nodeSelector, but with a more expressive syntax.
				
				preferredDuringSchedulingIgnoredDuringExecution: The scheduler tries to find a node that meets the rule. If a matching node is not available, the scheduler still schedules the Pod.
	Note : If you specify both nodeSelector and nodeAffinity, both must be satisfied for the Pod to be scheduled onto a node.
	
	node selector vs nodeAffinity:
		nodeSelector only selects nodes with all the specified labels. Affinity/anti-affinity gives you more control over the selection logic. 
		You can indicate that a rule is soft or preferred, so that the scheduler still schedules the Pod even if it can't find a matching node.
	Pod affinity and anti-affinity
			pod affinity: an application that consists of multiple services, some of which may require that they be co-located on the same node for 
			performance reasons.
			anti-affinity: replicas of critical services shouldn't be placed onto the same node to avoid loss in the event of node failure.
	
	https://www.devopsschool.com/blog/understanding-node-selector-and-node-affinity-in-kubernetes/
	
	
	
66. To upgrade K8s version, what steps you will follow?
	it will support only last three version
		use of drain we can do upgrater later kubectl uncordon ( Drain node in preparation for maintenance same as kubectl drain.Cordon will mark the node as unschedulable.Uncordon will mark the node as schedulable )
	a.Upgrade the control plane.
	b.Upgrade the nodes in your cluster.
	c. Upgrade clients such as kubectl.
	d. Adjust manifests and other resources based on the API changes that accompany the new Kubernetes version
67. By default how many namespaces are available in kubernetes?
	Kubernetes comes with three namespaces out-of-the-box. They are:

	default: As its name implies, this is the namespace that is referenced by default for every Kubernetes command, and where every Kubernetes resource is located by default. 
		 Until new namespaces are created, the entire cluster resides in ‘default’.
	kube-system: Used for Kubernetes components and should be avoided.
	kube-public: Used for public resources. Not recommended for use by users.
68. To resstrict cpu, memory usage for pod, what you need to mention in yml file.
	using resource . 
	ex:
		resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
69. Why we use networking solutions like flannel or calico?
	to get the different ips use of calico,waver and flannel
70. If I deploy application running in x namespace, It provide some data, after sometime it got destroyed. I didn't took backup. How to resolve this issue?
	you can external volumes or pv 
	
	Two things you need to backup :

	Kubernetes stores its state in etcd , so to restore the master, etcd and relevant certificates must be backed up. 
	This post wont talk about about backing up etcd as its quite well documented here
	Application data i.e persistent volumes, because lets face it you will be having stateful applications running on your cluster. 
	We cover this point in this post.
71. What is RBAC (Role-based access control)?
	Kubernetes RBAC is a key security control to ensure that cluster users and workloads have only the access to resources required to execute their roles.
	
72. What is use of PV and PVC?
	pv: Kubernetes makes physical storage devices like your SSDs, NVMe disks, NAS, NFS servers available to your cluster in the 
	form of objects called -- Persistent Volumes
	pvc: Each of these Persistent Volumes is consumed by a Kubernetes Pod (or Pods) by issuing a PersistentVolumeClaim object -- a PVC.
	A PVC object lets pods use storage from Persistent Volumes.
73. Do you know ingress in K8s?
	an Ingress is an object that allows access to your Kubernetes services from outside the Kubernetes cluster. 
	You configure access by creating a collection of rules that define which inbound connections reach which services
74. How did you setup monitoring tools in cluster?

	If youb want logs : set ELK
	if you graphical view : prometheus.grafana
75. Did you face any challenge in application while setting K8s cluster or while deploying application?
	a. namespace (resource limit if dev namespace limited)
	b. when configuare copy to pod. ( we are copying kubernetes user and inside was root. so user mismatch then copy to /tmp then copy to destination useing copy)
	c. helm chat spl char. using of base64 code exchange 
	d. service issue
76. Application is 3 tier application Front end, backend and DB. while accessing DNS it says traffic is unable to access application. 
What do you think what can be issue?
	selctor/labels mismatch
77. I given 10 mins time, I need to deploy 3 tier application, which method you follow?
	helm is best way deploy 
78. Which one is better bare matel K8s or cloud services?
	
	aviod pacth service --> eks,aks
	senstive info --> kubeadm 
79. dry run for creation of deployment 

	kubectl create deployment --image=nginx nginx --replicas=4 --dry-run=client -o yaml > nginx-deployment.yaml
80. Service types in kubernetes?
	nodeport,,clusterIP,Loadbalncer
81. nodeport range --> 30000 to 32867
82. How to change default name space 
	kubectl config set-context $(kubectl config current-context) --namespace=dev
83. Kubernetes imperative and declaraive approcah ?

	imperative : we will give each and every instruction  like ..
				kubectl run nginx --image=nginx
				kubectl create deployment --image=nginx nginx
				kubectl expose deployment nginx --port 80
				
	declaraive: kubectl apply -f nginx.yaml 
84 . Create servive in imperative way ..

	kubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml
	
		or
	kubectl create service clusterip redis --tcp=6379:6379 --dry-run=client -o yaml
85. If schdeuler not avaiable how can schdeule pods ?
	using nodeName property will be schedule other way using of binding 
86. Filter using labels
		kubectl get pods --selector labelname
87. Static pod location .
	create a yaml file and place --> /etc/kubernetes/manifests
	then update kubeconfig.yaml and kubelet.service location
88. Diff between static pod and daemonsets?
	 staticpod : created by kubelet ( nodelevel updated /etc/kubernetes/manifests)
				 use: deploy the controlplane componets as static pods
	 DaemonSets: created by kube-api server ( dameon set controller)
				use : Deploy the monitor agents logging agents on nodes 
	 both are ignored by kube-schdeuler 
89. Kubelet default location --> /var/lib/kubelet/config.yaml
90. How to find metic ( monitor details )Iex: git clone https://github.com/kodekloudhub/kubernetes-metrics-server.git then kubectl create -f .)
	you have use external tools like prometheus,elatick stack (kibana) ..etc
	you have clone and delpoy metricks server . then kubectl top pod or kubectl top nodes 
91. How to check the rollout history ?

	kubectl rollout status deployment-name
	kubectl rollout history dep-name
	
92. How to update the image in deployment ?
	kubectl set image deploy-name nginx=nginx:19.2
93. how to undo the deployment ?
	kubectl rollout undo dep-name
94. Force repalce 
	kubectl repalce --force -f filkename
95. Authization types 
	node ,attribute based authorization, Role bases authorization, Webhook, Always allow(default), Always denied 
96. stateful applications ?

	https://loft.sh/blog/kubernetes-statefulset-examples-and-best-practices/
97. Headless Services
	Its a service without loadbalancer in case of multiple pods & gives unique Identifier to pod as identification.

	Example -: In case of My-sql DB . We know we point one app to another through service ,suppose we have a My-sql db 3 pods cluster & webapp want to connect to 
		  the db but a service will act as loadbalancer ,can read write from any db,but in production setup only master db should be used by application to
		  write data ,other pods/slave dbs can be used for reading the data also when a pod dies a new pod is created as replica-set than dns /Ip will change 
		  so we cannot force application to write only to master .In this scenario headless service will be used ,which results in a unique dns creation 
		  so one pod can be used to write data.

#############################################

kubectl create role developer --namespace=default --verb=list,create,delete --resource=pods

kubectl create rolebinding dev-user-binding --namespace=default --role=developer --user=dev-user

kubectl api-resources --namespaced=true

kubectl auth can-i list nodes --as michelle

jwt.io

imagepullsecrets:
 - name: 
 
 securityContext:
    runAsUser: 1010

kubectl exec podname -- whoami 

docker run -v data_vloume:/var/lib/volume mysql - volume mount 

docker run -v /var/mysql:/var/lib/mysql mysql -- bind mount 

ps -aux | grep kubelet | grep --color container-runtime-endpoint  - container runtime interface

kubectl create ingress ingress-test --rule="wear.my-online-store.com/wear*=wear-service:80"

journactl -u kube-apiserver

apt-mark unhold kubeadm && \
apt-get update && apt-get install -y kubeadm=1.26.0-00 && \
apt-mark hold kubeadm


apt-mark unhold kubelet kubectl && \
apt-get update && apt-get install -y kubelet=1.26.0-00 kubectl=1.26.0-00 && \
apt-mark hold kubelet kubectl
