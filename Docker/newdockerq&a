Docker 
###############################33

1. What is docker daemon
	The Docker daemon ( dockerd ) listens for Docker API requests and manages Docker objects such as images, containers, networks, and volumes
2. Whats docker engine will do ?
	its manages Docker objects such as images, containers, networks, and volumes
3. What are the components of the Docker Engine?
	Docker Cli, Docker Daemon, REST API
4. What we want to -it (interactive terminal on docker run -it images ) for few images?
	When you want give some input during execution of image we will give -it 
5. port mapping how we use ( docker run -p 8002(des):8000(source) img)
6.  volume mappling how we use ( docker run -v /opt/datadie(des):/var/lib/mysql(sou) mysql )
7. docker logs containetid ( to chcek the logs)
8. jenkins using docker ( docker run -p 8080:8080 -v /root/my-jennkins-dir:/var/jenkins_home -u root jenkins/jenkins)
9. Docker run -e APP_Color=pink imgname (here e app_color is envionment varibale you chcek while inspect the img )
10. diff between hypervisor and docker ?
	hypervisor will usevally create virtaul mechine its kind of mediator to create virtual mechine . But docker will run on hypersion and create containers.
11. Types of network 
	bridge - default and single
	overlay - multi servers
	macvlan - mac level 
12. Types of mounts in docker ?
	blind mounts
	volume mounts
	tmpfs mounts
13. What is docker namespace ?
	Namespace is one of linux future and importent concept of containers.Namespace add layer of isolation of container.
	some of namespace support by docker was PID ,NET ,IPC ..etc
14. What are docker stages ?
	created 
	running
	exited
	paused
	restarted
	dead
15. Whata are expecetd in your docker compose file while moving to production ?

	remove volume binding 
	binding differnt port to host 
	specify resrart policy 
	add extra service like log aggregator
16. how to chcek the docker image layer history with layer details ?
	docker history imgname --no-trunk 
17.Is it possible to create container writable layer without running docker conatiner?

	yes ,, Using of docker create command
18. how to find container size ?
	docker ps -as
19. How many ways you can restart the image ?
	they are three ways ..
	1. always --> 
		docker run -it -d --restart=always imagname
	2. on-failure
	3. unless-stopped
20. how to chcek live logs 
	docker events or docker log
21. how does docker worked behind the scences ? 
			or
	where namespace,,cgroup UnionFS is used in docker ?
	
	namespace: isolation between the containers . Ex:PID,User,filesystem ..etc
	
	Cgroup of control group : its responsible resoure management or resource limitaion on each container . ex: CPU,mem,network ..etc
	
	unionFS: this file service is used create docker image layer
22. Is it possible pull/push image  run/stop docker container from inside of container ?
	or
	talk to host docker dameon from inside of a container ?
	
	yes . its possible . how docker commuinate using of docker.sock(/var/run/docker.sock) it will be there in host mechine.
		
	docker run -d -it -v /var/run/docker.sock:/var/run/docker.sock --name docker docker
	
	docker attach docker
	
23. I have db and app container running on host . How can these two containers talk to each other ?
	using link flag incase of default bridge
	or use user defind bridge
24. what are most common inst used to write docker file ?
	FROM --> to take base img
	ARG  --> to pass varibales in build time 
	LABEL --> to give description
	ENV --> To set env varibales
	WORKDIR --> to set working dir
	RUN --> execution any command
	COPY --> copy something from local
	ADD --> same like copy and also extra futures
	EXPOSE --> to expose port in image
	CMD & Entrypoint --> to excute commands 
25. Diff between ADD and copy
		The Dockerfile specification provides two ways to copy files from the source system into an image: the COPY and ADD directives.
	Here we will look at the difference between them and when it makes sense to use each one of them.

	Sometimes you see COPY or ADD being used in a Dockerfile, but you should be using COPY 99% of the time. Here’s why.

	COPY and ADD are both Dockerfile instructions that serve a similar purpose. They let you copy files from a specific location into a Docker image.
	COPY takes in a source and destination. It only lets you copy in a local or directory from your host (the machine-building the Docker image) into the 
	Docker image itself.
	 the ADD directive will automatically expand tar files into the image file system. While this can reduce the number of Dockerfile steps required to build an image
	     ADD directive can accept a remote URL for its source argument
26. Diff between cmd and entry point ?

	CMD - The CMD describes the default container parameters or commands. The user can easily override the default command when you use this.
	ENTRYPOINT - A container with an ENTRYPOINT is preferred when you want to define an executable. You can only override it if you use the --entrypoint flag.

	
27. what is docker multistage file
	i have all images in it right ? then how can it be light weight 
	i have ubuntu mechine andgit repo which has code now explain end to end flow continoues deployment 
28. what are all plugin you have worked on
	maven integration ,Pipeline ,git,Amazon Elastic Container Service,kubernets,sonorkube,publish over ssh, docker, audit,ansible,
	what are all custom plugin you worked on
29.i have docker container in default network how can it connect with container
	bridge network is default.By use internal port number we can connect
30.i have a base image like centos:latest , how can i install app on image
	From Centos:latest
	run httpd 
	cmd foregorud 
	like that you can usecentos image


31. how many conatiners are there in pod by default 
	Each pod have pause container as template then other conatiner what we downloaded 
	The pause container is a container that exists in each pod, it’s like a template or a parent containers from which all the new containers in the pod inherit the namespaces. The pause container starts, then goes to “sleep”.

	It is a “template” container that reserves the namespaces which are shared among all the containers inside the pod.
32.what is key difference you find declarative vs scripted way in Jenkins

	declarative and scripted pipelines differ in terms of the programmatic approach on syntax ways :
	ex: declarative:
	 pipeline {  
		agent {    
         
			  }   

			stages {   
				stage("foo") {     
					steps {

	scripted:
		node {
			}
declarative is better than scripted way /
in declarive rubi injection not possible but scripted way its possible
33.what do understand in docker networks

	docker network is if two docker files are exiting in same host they not connect untill if they are same network.
	
	bridge: Bridge networks are usually used when your applications run in standalone containers that need to communicate
	Overlay : networks are best when you need containers running on different Docker hosts to communicate, or when multiple applications work together using swarm services.
	Macvlan networks:  are best when you are migrating from a VM setup or need your containers to look like physical hosts on your network, each with a unique MAC address.
	
34. what are the best ways to create docker files
	BP 1: Use official and verified Docker Images as Base Image
	BP 2: Use Specific Docker Image Versions
	BP 3: Use Small-Sized Official Images
	BP 4: Optimize Caching Image Layers
	BP 5: Use .dockerignore files
	BP 6: Make use of Multi-Stage Builds
	BP 7: Use the Least Privileged User 
	BP 8: Scan your Images for Security Vulnerabilities
	
35. CMD vs Entrypoint
	CMD - The CMD describes the default container parameters or commands. The user can easily override the default command when you use this.
	ENTRYPOINT - A container with an ENTRYPOINT is preferred when you want to define an executable. You can only override it if you use the --entrypoint flag.
	cmd can passed as argument for entrypoint
	
36. ENV vs ARG
	ARG: ARG instruction defines a variable that can be used to build a Docker image.
		ARG values are not available after the image is built.
		In the running container you can’t access the ARG variables.
		Once ARG variable is defined in the Dockerfile, you can always override the values by passing command line argument as shown below

	ENV: 
		ENV is to provide default values for your future environment variables inside the container
		We can’t change the ENV variable using command line argument directly
		If we need to change the ENV variable using CMD line then we have to use ARG and place ARG variable in ENV variable

37. what are difference between cmd add run
	RUN - RUN instruction allows you to install your application and packages required for it. It executes any commands on top of the current image and creates a new layer by committing the results. Often you will find multiple RUN instructions in a Dockerfile.

	CMD - CMD instruction allows you to set a default command, which will be executed only when you run container without specifying a command. If Docker container runs with a command, the default command will be ignored. If Dockerfile has more than one CMD instruction, all but last
	CMD instructions are ignored.
38.what are the best ways to run cmd and Entrypoint
39. How can i pass env variavles for while building the images
40. what are docker volumes
Are k8 certificates are encrypted or encoded
what is difference between ingress and Loadbalncer
If i have a Loadbalncer service and my k8 on premise on VM then how its works?
have you worked on ArgoCD
have do you customiaze an AMI in aws ?
what are all the service you worked on aws
what is cloud trail
	To track enter account logs
how can i store the all the logs of cloud trail
what is diff between NACL vs Securithgroup

application work flow in ci/cd

SCM --> prepare --> sonorkube

	
		
	
			
	
	
